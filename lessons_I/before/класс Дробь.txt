#include <iostream>
#include <cmath>

using namespace std;

	class Drob
	{
	private:
		int ch;
		int zn;
	public:
		Drob(int a, int b) {
			ch = a;
			zn = b;
			doSimple();
		}
		Drob(int a) {
			ch = a;
			zn = 1;
		}
		Drob() {
			ch = 0;
			zn = 1;
		}

		void doSimple()
		{
			int a = abs(ch);
			int b = abs(zn);
			// Алгоритм Евклида нахождения НОД
			while (a != b)
				if (a > b)
					a = a - b;
				else
					b = b - a;
			// НОД = а
			ch = ch / a;
			zn = zn / a;
		}
		void sum(Drob one, Drob two)
		{
			int a = one.zn;
			int b = two.zn;
			// Найти НОК знаметалей
			int nok = 0;
			for (int i = a; nok == 0; i++)
				if (i % a == 0 && i % b == 0)
					nok = i;   // 15

							   // дополнительные множители
			int dm1 = nok / one.zn;       // 5   
			int dm2 = nok / two.zn;       // 3

										  // результат  
			ch = dm1 * one.ch + dm2 * two.ch;  // 11
			zn = nok;  // 15
			
			doSimple();
		}
		void razn(Drob one, Drob two)
		{
			int a = one.zn;
			int b = two.zn;
			// Найти НОК знаметалей
			int nok = 0;
			for (int i = a; nok == 0; i++)
				if (i % a == 0 && i % b == 0)
					nok = i;   // 15

							   // дополнительные множители
			int dm1 = nok / one.zn;       // 5   
			int dm2 = nok / two.zn;       // 3

										  // результат  
			ch = dm1 * one.ch - dm2 * two.ch;  // 11
			zn = nok;  // 15
			doSimple();

		}
		void umn(Drob one, Drob two)
		{
			// можем записать сразу результат
			ch = one.ch * two.ch;
			zn = one.zn * two.zn;

			// и упростить
			doSimple();
		}
		void delen(Drob one, Drob two)
		{
			// можем записать сразу результат
			// поменяв местами числитель и знаменатель
			ch = one.ch * two.zn;
			zn = one.zn * two.ch;

			// и упростить
			doSimple();
		}
		void print()
		{
			cout << ch << " / " << zn << endl;
		}
	};

	int main()
	{
		Drob one(2, 6);
		Drob two(2, 5);
		one.doSimple();
		Drob res;
		res.delen(two, one);
		res.print();
		system("pause");
		return 0;
	}